name: Build, Push to GHCR, Deploy to Azure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  APP_NAME: papersummarizerweb
  RG: paper-summarizer-rg

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # required to push to GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Compute lowercase image ref: ghcr.io/<owner>/<repo>
      - name: Compute image ref
        id: meta
        run: |
          echo "image=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image (SHA + latest)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.sha }}
            ${{ steps.meta.outputs.image }}:latest

      - name: Azure Login (service principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Ensure container port settings (idempotent)
      - name: Ensure container port env vars
        run: |
          az webapp config appsettings set \
            --name ${{ env.APP_NAME }} \
            --resource-group ${{ env.RG }} \
            --settings WEBSITES_PORT=8501 PORT=8501

      # Point the Web App to the new immutable SHA tag and restart
      - name: Update image and restart
        run: |
          az webapp config container set \
            --name ${{ env.APP_NAME }} \
            --resource-group ${{ env.RG }} \
            --docker-custom-image-name ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.sha }}
          az webapp restart --name ${{ env.APP_NAME }} --resource-group ${{ env.RG }}

      # Optional warm-up (wonâ€™t fail the job)
      - name: Warm up
        run: |
          curl -I https://${{ env.APP_NAME }}.azurewebsites.net || true
